plugins {
  id "java-library"
  id 'de.undercouch.download' version '5.4.0'
  id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
}

description = 'Infra Mybatis Integration'

group = "cn.taketoday"

apply plugin: 'jacoco'
apply plugin: 'infra.application'

ext.javadocLinks = [
    "https://docs.oracle.com/en/java/javase/17/docs/api/",
    "https://jakarta.ee/specifications/platform/9/apidocs/",
    "https://docs.jboss.org/hibernate/orm/5.6/javadocs/",

] as String[]

ext {
  isSnapshot = version.endsWith('SNAPSHOT')
  isReleaseVersion = !isSnapshot
}

apply from: "$rootDir/gradle/infra-module.gradle"

repositories {
  mavenLocal()
  mavenCentral()

  if (version.endsWith('-SNAPSHOT')) {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
  }
}

dependencies {
  api 'cn.taketoday:today-core'
  api 'org.mybatis:mybatis:3.5.9'

  compileOnly('cn.taketoday:today-web')
  compileOnly('cn.taketoday:today-jdbc')
  compileOnly('cn.taketoday:today-beans')
  compileOnly('cn.taketoday:today-context')
  compileOnly('cn.taketoday:today-framework')

  annotationProcessor("cn.taketoday:infra-configuration-processor")
  annotationProcessor("cn.taketoday:infra-annotation-config-processor")

  testImplementation 'cn.taketoday:today-test'
  testImplementation 'cn.taketoday:today-tx'

  testImplementation 'org.apache.derby:derby'
  testImplementation 'com.fasterxml.woodstox:woodstox-core'
  testImplementation 'jakarta.transaction:jakarta.transaction-api'

  testImplementation 'com.h2database:h2'
  testImplementation 'com.atomikos:transactions-jdbc:5.0.9'
  testImplementation 'org.jboss.byteman:byteman-bmunit:4.0.18'

  testImplementation('com.mockrunner:mockrunner-ejb:2.0.6') {
    exclude group: 'commons-beanutils', module: 'commons-beanutils'
    exclude group: 'org.mockejb', module: 'mockejb'
    exclude group: 'nekohtml', module: 'nekohtml'
  }

  testImplementation('com.mockrunner:mockrunner-jdbc:2.0.6') {
    exclude group: 'nekohtml', module: 'nekohtml'
    exclude group: 'junit', module: 'junit'
  }

  testImplementation('com.mockrunner:mockrunner-core:2.0.6') {
    exclude group: 'commons-logging', module: 'commons-logging'
    exclude group: 'com.kirkk', module: 'jaranalyzer'
    exclude group: 'jdom', module: 'jdom'
    exclude group: 'nekohtml', module: 'nekohtml'
    exclude group: 'junit', module: 'junit'
  }


  testImplementation("org.junit.jupiter:junit-jupiter-api")
  testImplementation("org.junit.jupiter:junit-jupiter-params")
  testImplementation("org.mockito:mockito-core")
  testImplementation("org.mockito:mockito-junit-jupiter")
  testImplementation("org.assertj:assertj-core")
  testImplementation 'org.projectlombok:lombok'
  testAnnotationProcessor("org.projectlombok:lombok")

  // Pull in the latest JUnit 5 Launcher API to ensure proper support in IDEs.
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
  testRuntimeOnly("org.junit.platform:junit-platform-launcher")
  testRuntimeOnly("org.junit.platform:junit-platform-suite-engine")
  // JSR-305 only used for non-required meta-annotations
  compileOnly("com.google.code.findbugs:jsr305")
  compileOnly("com.google.code.findbugs:findbugs")
  compileOnly('org.jboss.logging:jboss-logging:3.5.3.Final')
}

java {
  sourceCompatibility = 17
  targetCompatibility = 17
}

test {
  useJUnitPlatform()
}

jacocoTestReport {
  reports {
    xml.required = true
    csv.required = false
    html.required = false
  }
}

infraJar {
  enabled = false
}

check {
  dependsOn jacocoTestReport
}

if (isReleaseVersion) {
  nexusPublishing {
    repositories {
      sonatype {
        username = repoUsername
        password = repoPassword
      }
    }
  }
}
